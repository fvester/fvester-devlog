/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 -t scene.gltf 
Author: Artik (https://sketchfab.com/artikdev)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/asus-pc-gaming-monitor-941ce968c30a42d0a640a5c9d7f56128
Title: Asus PC Gaming Monitor
*/

import * as THREE from 'three';
import React from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type ActionName = 'Animation';

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName;
}

type GLTFResult = GLTF & {
  nodes: {
    Plano_Base_0: THREE.Mesh;
    Plano001_Base_0: THREE.Mesh;
    Plano001_Screen_0: THREE.Mesh;
    Plano001_Backboard_0: THREE.Mesh;
    Bolt_Bolt_0: THREE.Mesh;
    Bolt001_Bolt_0: THREE.Mesh;
    Bolt002_Bolt_0: THREE.Mesh;
    Bolt003_Bolt_0: THREE.Mesh;
  };
  materials: {
    Base: THREE.MeshStandardMaterial;
    Screen: THREE.MeshStandardMaterial;
    Backboard: THREE.MeshStandardMaterial;
    Bolt: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

export function Monitor2(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(
    '/models/asus_monitor/scene.glb',
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      {/* <ambientLight /> */}
      <group rotation={[-Math.PI / 2, 0, 0]} scale={0.065}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-0.106, 358.788, -251.948]} scale={100}>
            <mesh
              geometry={nodes.Plano001_Base_0.geometry}
              material={materials.Base}
            />
            <mesh
              geometry={nodes.Plano001_Screen_0.geometry}
              material={materials.Screen}
            />
            <mesh
              geometry={nodes.Plano001_Backboard_0.geometry}
              material={materials.Backboard}
            />
          </group>
          <mesh
            geometry={nodes.Plano_Base_0.geometry}
            material={materials.Base}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          {/* <mesh
            geometry={nodes.Bolt_Bolt_0.geometry}
            material={materials.Bolt}
            position={[138.582, 413.877, -176.412]}
            scale={5.554}
          />
          <mesh
            geometry={nodes.Bolt001_Bolt_0.geometry}
            material={materials.Bolt}
            position={[138.582, 330.051, -176.412]}
            scale={5.554}
          />
          <mesh
            geometry={nodes.Bolt002_Bolt_0.geometry}
            material={materials.Bolt}
            position={[-137.909, 413.877, -176.412]}
            scale={5.554}
          />
          <mesh
            geometry={nodes.Bolt003_Bolt_0.geometry}
            material={materials.Bolt}
            position={[-137.909, 330.051, -176.412]}
            scale={5.554}
          /> */}
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('/models/asus_monitor/scene.glb');
