/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 -t scene.gltf 
Author: vesicalsnail (https://sketchfab.com/milansaman21)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/acer-monitor-07debcacbbec408faa54f61097bf3881
Title: Acer monitor
*/

import * as THREE from 'three';
import React from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type ActionName = 'Animation';

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName;
}

type GLTFResult = GLTF & {
  nodes: {
    Object_12: THREE.Mesh;
    Object_14: THREE.Mesh;
    Object_18: THREE.Mesh;
    Object_19: THREE.Mesh;
    Object_16: THREE.Mesh;
    Object_23: THREE.Mesh;
    Object_25: THREE.Mesh;
    Object_26: THREE.Mesh;
    Object_28: THREE.Mesh;
    Object_29: THREE.Mesh;
    Object_31: THREE.Mesh;
    Object_32: THREE.Mesh;
    Object_21: THREE.Mesh;
    Object_34: THREE.Mesh;
    Object_35: THREE.Mesh;
    Object_41: THREE.Mesh;
    Object_42: THREE.Mesh;
    Object_44: THREE.Mesh;
    Object_37: THREE.Mesh;
    Object_38: THREE.Mesh;
    Object_39: THREE.Mesh;
    Object_7: THREE.Mesh;
    Object_8: THREE.Mesh;
    Object_9: THREE.Mesh;
    Object_10: THREE.Mesh;
    Object_46: THREE.Mesh;
    Object_47: THREE.Mesh;
    Object_53: THREE.Mesh;
    Object_49: THREE.Mesh;
    Object_50: THREE.Mesh;
    Object_51: THREE.Mesh;
    Object_5: THREE.Mesh;
  };
  materials: {
    ['noise_knoppen.001']: THREE.MeshStandardMaterial;
    noise_knoppen: THREE.MeshStandardMaterial;
    ['gold.plug']: THREE.MeshStandardMaterial;
    ['plastic.hdmi']: THREE.MeshStandardMaterial;
    ['metaal.']: THREE.MeshStandardMaterial;
    ['metal.hdmi']: THREE.MeshStandardMaterial;
    grid_knop: THREE.MeshStandardMaterial;
    metaal_voetstuk: THREE.MeshStandardMaterial;
    noise_plastic_algemeen: THREE.MeshStandardMaterial;
    zwart_metaal: THREE.MeshStandardMaterial;
    noise_plastic_voet: THREE.MeshStandardMaterial;
    ['logo.coutout.smooth']: THREE.MeshStandardMaterial;
    ['achter.onder.noise.001']: THREE.MeshStandardMaterial;
    ['achter.ribbel.001']: THREE.MeshStandardMaterial;
    ['logo.coutout.smooth.001']: THREE.MeshStandardMaterial;
    ['achter.onder.vlak.001']: THREE.MeshStandardMaterial;
    ['rand.ribbel']: THREE.MeshStandardMaterial;
    acer_logo: THREE.MeshStandardMaterial;
    ['rand.voor.ribbel']: THREE.MeshStandardMaterial;
    ['indictor.light']: THREE.MeshStandardMaterial;
    screen: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

export function Monitor(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(
    '/models/monitor/scene.glb',
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group position={[0, 0.564, -0.034]}>
        <group position={[0.042, -0.21, 0.001]} scale={[0.336, 0.308, 0.026]}>
          <group
            position={[0.649, 0.013, 0.093]}
            rotation={[-Math.PI, Math.PI / 2, 0]}
            scale={[76.201, 6.512, 5.977]}
          >
            <mesh
              geometry={nodes.Object_18.geometry}
              material={materials['gold.plug']}
            />
            <mesh
              geometry={nodes.Object_19.geometry}
              material={materials['plastic.hdmi']}
            />
          </group>
          <mesh
            geometry={nodes.Object_16.geometry}
            material={materials['metaal.']}
          />
        </group>
        <group position={[-0.228, -0.21, 0.004]} scale={0.308}>
          <group position={[0.205, 0.011, -0.001]} scale={0.008}>
            <mesh
              geometry={nodes.Object_25.geometry}
              material={materials['metal.hdmi']}
            />
            <mesh
              geometry={nodes.Object_26.geometry}
              material={materials['plastic.hdmi']}
            />
          </group>
          <group position={[0.007, 0.011, -0.001]} scale={0.008}>
            <mesh
              geometry={nodes.Object_28.geometry}
              material={materials['metal.hdmi']}
            />
            <mesh
              geometry={nodes.Object_29.geometry}
              material={materials['plastic.hdmi']}
            />
          </group>
          <group position={[-0.187, 0.011, -0.001]} scale={0.008}>
            <mesh
              geometry={nodes.Object_31.geometry}
              material={materials['metal.hdmi']}
            />
            <mesh
              geometry={nodes.Object_32.geometry}
              material={materials['plastic.hdmi']}
            />
          </group>
          <mesh
            geometry={nodes.Object_21.geometry}
            material={materials['metaal.']}
          />
          <mesh
            geometry={nodes.Object_23.geometry}
            material={materials['plastic.hdmi']}
            position={[-0.371, 0.017, 0.002]}
            scale={0.02}
          />
        </group>
        <group position={[0.604, -0.261, 0.023]}>
          <mesh
            geometry={nodes.Object_34.geometry}
            material={materials.noise_knoppen}
          />
          <mesh
            geometry={nodes.Object_35.geometry}
            material={materials.grid_knop}
          />
        </group>
        <group position={[0, -0.378, -0.019]}>
          <mesh
            geometry={nodes.Object_37.geometry}
            material={materials.noise_plastic_voet}
          />
          <mesh
            geometry={nodes.Object_38.geometry}
            material={materials['logo.coutout.smooth']}
          />
          <mesh
            geometry={nodes.Object_39.geometry}
            material={materials.metaal_voetstuk}
          />
          <mesh
            geometry={nodes.Object_41.geometry}
            material={materials.metaal_voetstuk}
          />
          <mesh
            geometry={nodes.Object_42.geometry}
            material={materials.noise_plastic_algemeen}
          />
          <mesh
            geometry={nodes.Object_44.geometry}
            material={materials.zwart_metaal}
          />
        </group>
        <mesh
          geometry={nodes.Object_7.geometry}
          material={materials['achter.onder.noise.001']}
        />
        <mesh
          geometry={nodes.Object_8.geometry}
          material={materials['achter.ribbel.001']}
        />
        <mesh
          geometry={nodes.Object_9.geometry}
          material={materials['logo.coutout.smooth.001']}
        />
        <mesh
          geometry={nodes.Object_10.geometry}
          material={materials['achter.onder.vlak.001']}
        />
        <mesh
          geometry={nodes.Object_12.geometry}
          material={materials['noise_knoppen.001']}
          position={[0, -0.378, 0.034]}
        />
        <mesh
          geometry={nodes.Object_14.geometry}
          material={materials.noise_knoppen}
          position={[0, -0.378, 0.034]}
        />
      </group>
      <group position={[0.002, 0.558, 0.014]}>
        <mesh
          geometry={nodes.Object_46.geometry}
          material={materials['rand.ribbel']}
        />
        <mesh
          geometry={nodes.Object_47.geometry}
          material={materials.noise_plastic_voet}
        />
      </group>
      <group position={[0.002, 0.21, 0.026]}>
        <mesh
          geometry={nodes.Object_49.geometry}
          material={materials['rand.voor.ribbel']}
        />
        <mesh
          geometry={nodes.Object_50.geometry}
          material={materials['indictor.light']}
        />
        <mesh
          geometry={nodes.Object_51.geometry}
          material={materials.noise_plastic_algemeen}
        />
        <mesh
          geometry={nodes.Object_53.geometry}
          material={materials.acer_logo}
          position={[-0.002, 0.001, 0.004]}
          rotation={[Math.PI / 2, 0, 0]}
        />
      </group>
      {/* <mesh geometry={nodes.Object_5.geometry} material={materials.screen} /> */}
    </group>
  );
}

useGLTF.preload('/models/monitor/scene.glb');
