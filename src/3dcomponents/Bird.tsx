/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 -t scene.gltf 
Author: Wen Yeh (https://sketchfab.com/wenyeh1110)
License: CC-BY-NC-SA-4.0 (http://creativecommons.org/licenses/by-nc-sa/4.0/)
Source: https://sketchfab.com/3d-models/bird-orange-0d31748606c2499fb652c0c1052b7cfa
Title: Bird Orange
*/

import * as THREE from 'three';
import React, { useEffect } from 'react';
import { useFrame, useGraph } from '@react-three/fiber';
import { useGLTF, useAnimations } from '@react-three/drei';
import { GLTF, SkeletonUtils } from 'three-stdlib';

type ActionName = 'anim';

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName;
}

type GLTFResult = GLTF & {
  nodes: {
    Object_51: THREE.SkinnedMesh;
    _rootJoint: THREE.Bone;
  };
  materials: {
    BirdOrange_LMB: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

export function Bird(props: JSX.IntrinsicElements['group']) {
  const group = React.useRef<THREE.Group | null>(null);
  const { scene, animations } = useGLTF('/models/bird/scene.glb');
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes, materials } = useGraph(clone) as GLTFResult;
  const { actions } = useAnimations(animations, group);

  // Make object dark
  materials.BirdOrange_LMB.emissiveIntensity = 0.5;

  // Animation
  const clip = animations.find((a) => a.name === 'anim');
  const start = 0.6;
  const end = clip ? clip.duration : 0;

  // Cut animation
  useEffect(() => {
    const action = actions['anim'];

    if (!action) return;

    action.time = start;
    action.play();
  }, [actions]);

  useFrame(() => {
    const action = actions['anim'];
    if (action) {
      if (action.time >= end - 0.05) {
        action.time = start;
      }
    }
  });

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group
          name="Sketchfab_model"
          rotation={[-Math.PI / 2, 0, 0]}
          scale={46.683}
        >
          <group
            name="bfb1ea86655f4c4ab4c6cbbb449cedf4fbx"
            rotation={[Math.PI / 2, 0, 0]}
            scale={0.01}
          >
            <group name="Object_2">
              <group name="RootNode">
                <group name="BirdOrange_all">
                  <group
                    name="Main"
                    position={[-0.083, 0, 0.451]}
                    rotation={[0, -0.074, 0]}
                  >
                    <group name="Object_6">
                      <primitive object={nodes._rootJoint} />
                      <group name="Object_50" />
                      <skinnedMesh
                        name="Object_51"
                        geometry={nodes.Object_51.geometry}
                        material={materials.BirdOrange_LMB}
                        skeleton={nodes.Object_51.skeleton}
                      />
                    </group>
                  </group>
                  <group name="Geometry">
                    <group name="BirdOrange" />
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('/models/bird/scene.glb');
